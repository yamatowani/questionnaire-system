# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Answer {
  id: Int!
  question: Question!
  option: Option!
  other_response: String
}

type Option {
  id: ID!
  option_text: String!
  question: Question!
  answers: [Answer!]!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Question {
  id: ID!
  question_text: String!
  has_multiple_options: Boolean!
  allows_other: Boolean!
  options: [Option!]!
  answers: [Answer!]
  survey: Survey!
  created_at: DateTime!
  updated_at: DateTime!
}

type Survey {
  id: ID!
  title: String!
  url: String!
  answer_count: Int!
  admin_user: AdminUser!
  questions: [Question!]!
  created_at: DateTime!
  updated_at: DateTime!
}

type AdminUser {
  id: ID!
  name: String!
  email: String!
  created_at: DateTime!
  updated_at: DateTime!
  surveys: [Survey!]!
}

type RegisterAdminUserOutput {
  success: Boolean!
  errorMessage: String
  user: AdminUser
}

type AuthResponse {
  accessToken: String!
}

type SurveyResult {
  surveyId: Int!
  title: String!
  answer_count: Float!
  questionResults: [QuestionResults!]!
}

type QuestionResults {
  questionId: Int!
  questionText: String!
  answerCounts: [AnswerCounts!]!
  otherCount: Int
  otherResponses: [String!]
}

type AnswerCounts {
  optionId: Int!
  optionText: String!
  count: Int!
}

type SubmitSurveyOutput {
  success: Boolean!
  errorMessage: String
  survey: Survey
}

type SubmitAnswerOutput {
  success: Boolean!
  errorMessage: String
  answer: [Answer!]
}

type Query {
  surveyByUrl(url: String!): Survey!
  surveys: [Survey!]!
  surveyResult(url: String!): SurveyResult!
}

type Mutation {
  registerAdminUser(registerAdminUserInput: RegisterAdminUserInput!): RegisterAdminUserOutput!
  submitSurvey(submitSurveyInput: SubmitSurveyInput!): SubmitSurveyOutput!
  authenticateAdminUser(authenticateAdminUserInput: AuthenticateAdminUserInput!): AuthResponse!
  submitAnswer(submitAnswerInput: SubmitAnswerInput!): SubmitAnswerOutput!
}

input RegisterAdminUserInput {
  name: String!
  email: String!
  password: String!
}

input SubmitSurveyInput {
  title: String!
  questions: [SubmitQuestionInput!]!
}

input SubmitQuestionInput {
  questionText: String!
  hasMultipleOptions: Boolean!
  allowsOther: Boolean!
  options: [SubmitOptionInput!]!
}

input SubmitOptionInput {
  optionText: String!
}

input AuthenticateAdminUserInput {
  email: String!
  password: String!
}

input SubmitAnswerInput {
  question_answers: [SubmitQuestionAnswerInput!]!
}

input SubmitQuestionAnswerInput {
  questionId: Int!
  options: [SubmitOptionAnswerInput!]!
}

input SubmitOptionAnswerInput {
  optionId: Int!
  otherResponse: String
}