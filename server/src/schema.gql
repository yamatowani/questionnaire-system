# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Answer {
  id: Int!
  question: Question!
  option: Option!
}

type Option {
  id: ID!
  option_text: String!
  question: Question!
  answers: [Answer!]!
  created_at: DateTime!
  updated_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Question {
  id: ID!
  title: String!
  url: String!
  admin_user: AdminUser!
  options: [Option!]!
  answers: [Answer!]
  created_at: DateTime!
  updated_at: DateTime!
}

type AdminUser {
  id: ID!
  name: String!
  email: String!
  created_at: DateTime!
  updated_at: DateTime!
  questions: [Question!]!
}

type RegisterAdminUserOutput {
  success: Boolean!
  statusCode: Float!
  errorMessage: String
  user: AdminUser
}

type AnswerCount {
  option_id: Int!
  option_text: String!
  count: Int!
}

type QuestionWithAnswerCounts {
  questionId: Int!
  title: String!
  options: [AnswerCount!]!
}

type AuthResponse {
  access_token: String!
}

type Query {
  questionByUrl(url: String!): Question!
  questions(adminUserId: Int!): [Question!]!
  questionResults(adminUserId: Int!): [QuestionWithAnswerCounts!]!
}

type Mutation {
  registerAdminUser(registerAdminUserInput: RegisterAdminUserInput!): RegisterAdminUserOutput!
  submitQuestion(submitQuestionInput: SubmitQuestionInput!, adminUserId: Int!): Question!
  submitAnswer(submitAnswerInput: SubmitAnswerInput!): Answer!
  authenticateAdminUser(authenticateAdminUserInput: AuthenticateAdminUserInput!): AuthResponse!
}

input RegisterAdminUserInput {
  name: String!
  email: String!
  password: String!
}

input SubmitQuestionInput {
  title: String!
  options: [SubmitOptionInput!]!
}

input SubmitOptionInput {
  option_text: String!
}

input SubmitAnswerInput {
  option_id: Int!
  question_id: Int!
}

input AuthenticateAdminUserInput {
  email: String!
  password: String!
}